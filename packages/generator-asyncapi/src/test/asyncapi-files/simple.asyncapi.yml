asyncapi: 3.0.0
info:
  title: Account Service
  version: 1.0.0
  description: This service is in charge of processing user signups
  contact:
    name: Awesome Team
    url: https://example.com
    email: support@asyncapi.org
  tags:
    - name: Events
      description: APIs related to event streaming
    - name: Authentication
      description: APIs for authentication and authorization
  externalDocs:
    description: Additional documentation
    url: https://example.com/docs
channels:
  userSignedup:
    address: user/signedup
    messages:
      UserSignedUp:
        $ref: '#/components/messages/UserSignedUp'
      SignUpUser:
        $ref: '#/components/messages/SignUpUser'
      UserSignedOut:
        $ref: '#/components/messages/UserSignedOut'
      GetUserByEmail:
        $ref: '#/components/messages/GetUserByEmail'
      CheckEmailAvailability:
        $ref: '#/components/messages/CheckEmailAvailability'
  userSubscription:
    address: user/subscription
    messages:
      UserSubscribed:
        $ref: '#/components/messages/UserSubscribed'
operations:
  sendUserSignedup:
    action: send
    channel:
      $ref: '#/channels/userSignedup'
    messages:
      - $ref: '#/channels/userSignedup/messages/UserSignedUp'
  onUserSignup:
    action: receive
    channel:
      $ref: '#/channels/userSignedup'
    messages:
      - $ref: '#/channels/userSignedup/messages/SignUpUser'
  sendUserSignedout:
    action: send
    channel:
      $ref: '#/channels/userSignedup'
    messages:
      - $ref: '#/channels/userSignedup/messages/UserSignedOut'
  getUserByEmail:
    action: receive
    channel:
      $ref: '#/channels/userSignedup'
    messages:
      - $ref: '#/channels/userSignedup/messages/GetUserByEmail'
  checkEmailAvailability:
    action: receive
    channel:
      $ref: '#/channels/userSignedup'
    messages:
      - $ref: '#/channels/userSignedup/messages/CheckEmailAvailability'
  onUserSubscribed:
    action: receive
    channel:
      $ref: '#/channels/userSubscription'
    messages:
      - $ref: '#/channels/userSubscription/messages/UserSubscribed'
components:
  messages:
    UserSignedUp:
      description: 'User signed up the application'
      x-eventcatalog-message-type: event
      tags:
        - name: 'New'
          description: 'New event'
      headers:
        type: object
        properties:
          ec-message-type:
            type: string
            default: event
            description: Type of message for EventCatalog
      payload:
        type: object
        properties:
          displayName:
            type: string
            description: Name of the user
          email:
            type: string
            format: email
            description: Email of the user
    UserSignedOut:
      description: 'User signed out the application'
      tags:
        - name: 'New'
          description: 'New event'
      payload:
        type: object
        properties:
          displayName:
            type: string
            description: Name of the user
          email:
            type: string
            format: email
            description: Email of the user
    SignUpUser:
      description: 'Sign up a user'
      x-eventcatalog-message-type: command
      x-eventcatalog-message-version: 2.0.0
      x-eventcatalog-deprecated-date: 2025-04-09
      x-eventcatalog-deprecated-message: This operation is deprecated because it is not used in the codebase
      tags:
        - name: 'New'
          description: 'New event'
      payload:
        type: object
        properties:
          displayName:
            type: string
            description: Name of the user
          email:
            type: string
            format: email
            description: Email of the user
    GetUserByEmail:
      description: 'Get user information by email'
      x-eventcatalog-message-type: query
      tags:
        - name: 'Query'
          description: 'Query message'
      payload:
        type: object
        properties:
          email:
            type: string
            format: email
            description: Email of the user to retrieve
    CheckEmailAvailability:
      description: 'Check if an email is available for registration'
      x-eventcatalog-message-type: query
      tags:
        - name: 'Query'
          description: 'Query message'
      payload:
        type: object
        properties:
          email:
            type: string
            format: email
            description: Email to check for availability
    UserSubscribed:
      description: 'User Subscribed to newsletters'
      x-eventcatalog-role: client
      tags:
        - name: 'New'
          description: 'New event'
      payload:
        type: object
        properties:
          email:
            type: string
            description: email of the user
